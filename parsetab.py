
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL CHAR CHR COM COMMENT DEQUAL DIV ELSE EQUAL EXIT FALSE FLOAT FLT FOR GTHEN IDVAR IF INT INTEGER LBB LCB LPAREN LTHEN MAIN MINUS MOD MUL NOT OR PLUS PRINT RBB RCB RETURN RPAREN SCOLON STR STRING TRUE VOID WHILE WITHline : nline line \n            | nlinenline : dtype var SCOLON\n                | STR var SCOLONnline : flinenline : STR IDVAR EQUAL strvar SCOLONnline : BOOL MAIN LPAREN RPAREN LCB line RCBnline : RETURN LPAREN bval RPAREN SCOLONnline : ifstsnline : EXIT LPAREN RPAREN SCOLONnline : PRINT LPAREN pline RPAREN SCOLONpline : exp\n            | STRINGnline : FOR LPAREN fline bexp SCOLON assign RPAREN LCB line RCBnline : WHILE LPAREN bexp RPAREN LCB line RCBifsts : IF LPAREN bexp RPAREN LCB line RCB elsestselsests : ELSE LCB line RCB \n                | ELSE ifsts \n                | emptynumexp : assign SCOLONexp : exp PLUS term \n           | exp MINUS term \n           | termterm : term MUL fact \n            | term DIV fact \n            | term MOD fact \n            | factfact : INTEGER \n            | FLOAT \n            | var\n            | bval\n            | CHARbval : TRUE\n            | FALSEvar : IDVAR\n            | IDVAR LBB INTEGER RBBdtype : INT \n            | FLT \n            | CHR \n            | BOOLstrvar : STRING \n            | varbexp : bexp andor bexp2 \n            | bexp2bexp2 : bexp2 rln exp \n            | exprln : DEQUAL \n            | GTHEN \n            | LTHEN \n            | NOTandor : AND \n            | ORempty :assign : var EQUAL expfline : dtype numexp \n            | numexpnline : dtype LBB RBB IDVAR EQUAL arrt SCOLON\n                | STR LBB RBB IDVAR EQUAL arrt SCOLONarrt : var \n            | LCB dws RCBdws : factarr COM dws \n            | factarrfactarr : fact \n    | STRING'
    
_lr_action_items = {'STR':([0,2,6,10,19,24,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,132,135,136,137,139,],[5,5,-5,-9,-56,-55,-20,-3,-4,-10,-6,5,-8,-11,5,5,-57,-58,-7,-15,-53,5,-16,-19,5,-18,-14,-17,]),'BOOL':([0,2,6,10,19,24,34,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,132,135,136,137,139,],[8,8,-5,-9,-56,-55,62,-20,-3,-4,-10,-6,8,-8,-11,8,8,-57,-58,-7,-15,-53,8,-16,-19,8,-18,-14,-17,]),'RETURN':([0,2,6,10,19,24,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,132,135,136,137,139,],[9,9,-5,-9,-56,-55,-20,-3,-4,-10,-6,9,-8,-11,9,9,-57,-58,-7,-15,-53,9,-16,-19,9,-18,-14,-17,]),'EXIT':([0,2,6,10,19,24,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,132,135,136,137,139,],[11,11,-5,-9,-56,-55,-20,-3,-4,-10,-6,11,-8,-11,11,11,-57,-58,-7,-15,-53,11,-16,-19,11,-18,-14,-17,]),'PRINT':([0,2,6,10,19,24,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,132,135,136,137,139,],[12,12,-5,-9,-56,-55,-20,-3,-4,-10,-6,12,-8,-11,12,12,-57,-58,-7,-15,-53,12,-16,-19,12,-18,-14,-17,]),'FOR':([0,2,6,10,19,24,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,132,135,136,137,139,],[13,13,-5,-9,-56,-55,-20,-3,-4,-10,-6,13,-8,-11,13,13,-57,-58,-7,-15,-53,13,-16,-19,13,-18,-14,-17,]),'WHILE':([0,2,6,10,19,24,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,132,135,136,137,139,],[15,15,-5,-9,-56,-55,-20,-3,-4,-10,-6,15,-8,-11,15,15,-57,-58,-7,-15,-53,15,-16,-19,15,-18,-14,-17,]),'INT':([0,2,6,10,19,24,34,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,132,135,136,137,139,],[16,16,-5,-9,-56,-55,16,-20,-3,-4,-10,-6,16,-8,-11,16,16,-57,-58,-7,-15,-53,16,-16,-19,16,-18,-14,-17,]),'FLT':([0,2,6,10,19,24,34,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,132,135,136,137,139,],[17,17,-5,-9,-56,-55,17,-20,-3,-4,-10,-6,17,-8,-11,17,17,-57,-58,-7,-15,-53,17,-16,-19,17,-18,-14,-17,]),'CHR':([0,2,6,10,19,24,34,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,132,135,136,137,139,],[18,18,-5,-9,-56,-55,18,-20,-3,-4,-10,-6,18,-8,-11,18,18,-57,-58,-7,-15,-53,18,-16,-19,18,-18,-14,-17,]),'IF':([0,2,6,10,19,24,35,38,50,80,99,101,102,103,105,108,117,122,123,125,126,129,130,131,132,135,136,137,139,],[20,20,-5,-9,-56,-55,-20,-3,-4,-10,-6,20,-8,-11,20,20,-57,-58,-7,-15,-53,20,-16,20,-19,20,-18,-14,-17,]),'IDVAR':([0,2,3,5,6,8,10,16,17,18,19,24,25,33,34,35,36,37,38,39,50,51,52,60,61,62,68,69,70,71,72,80,84,85,86,87,88,89,90,91,93,99,100,101,102,103,104,105,108,111,117,122,123,125,126,128,129,130,132,135,136,137,139,],[7,7,7,27,-5,-40,-9,-37,-38,-39,-56,-55,7,7,7,-20,7,7,-3,67,-4,7,76,7,7,-40,7,7,7,7,7,-10,7,-51,-52,7,-47,-48,-49,-50,7,-6,7,7,-8,-11,7,7,7,7,-57,-58,-7,-15,-53,7,7,-16,-19,7,-18,-14,-17,]),'$end':([1,2,6,10,19,21,24,35,38,50,80,99,102,103,117,122,123,125,126,130,132,136,137,139,],[0,-2,-5,-9,-56,-1,-55,-20,-3,-4,-10,-6,-8,-11,-57,-58,-7,-15,-53,-16,-19,-18,-14,-17,]),'RCB':([2,6,7,10,19,21,24,35,38,40,44,45,46,47,48,49,50,77,80,99,102,103,113,115,116,117,118,119,120,121,122,123,125,126,130,132,133,134,136,137,138,139,],[-2,-5,-35,-9,-56,-1,-55,-20,-3,-30,-28,-29,-31,-32,-33,-34,-4,-36,-10,-6,-8,-11,123,125,126,-57,127,-62,-63,-64,-58,-7,-15,-53,-16,-19,-61,137,-18,-14,139,-17,]),'LBB':([3,5,7,8,16,17,18,27,],[23,28,29,-40,-37,-38,-39,29,]),'EQUAL':([4,7,22,27,67,76,77,],[25,-35,25,51,93,100,-36,]),'SCOLON':([7,14,22,26,27,40,41,42,43,44,45,46,47,48,49,56,64,65,73,74,75,77,79,81,82,94,95,96,97,98,106,107,109,110,112,127,],[-35,35,38,50,-35,-30,-54,-23,-27,-28,-29,-31,-32,-33,-34,80,-44,-46,99,-41,-42,-36,102,103,104,-21,-22,-24,-25,-26,-43,-45,117,-59,122,-60,]),'MUL':([7,40,42,43,44,45,46,47,48,49,77,94,95,96,97,98,],[-35,-30,70,-27,-28,-29,-31,-32,-33,-34,-36,70,70,-24,-25,-26,]),'DIV':([7,40,42,43,44,45,46,47,48,49,77,94,95,96,97,98,],[-35,-30,71,-27,-28,-29,-31,-32,-33,-34,-36,71,71,-24,-25,-26,]),'MOD':([7,40,42,43,44,45,46,47,48,49,77,94,95,96,97,98,],[-35,-30,72,-27,-28,-29,-31,-32,-33,-34,-36,72,72,-24,-25,-26,]),'PLUS':([7,40,41,42,43,44,45,46,47,48,49,58,65,77,94,95,96,97,98,107,],[-35,-30,68,-23,-27,-28,-29,-31,-32,-33,-34,68,68,-36,-21,-22,-24,-25,-26,68,]),'MINUS':([7,40,41,42,43,44,45,46,47,48,49,58,65,77,94,95,96,97,98,107,],[-35,-30,69,-23,-27,-28,-29,-31,-32,-33,-34,69,69,-36,-21,-22,-24,-25,-26,69,]),'RPAREN':([7,32,40,41,42,43,44,45,46,47,48,49,54,55,57,58,59,63,64,65,66,77,94,95,96,97,98,106,107,114,],[-35,56,-30,-54,-23,-27,-28,-29,-31,-32,-33,-34,78,79,81,-12,-13,83,-44,-46,92,-36,-21,-22,-24,-25,-26,-43,-45,124,]),'DEQUAL':([7,40,42,43,44,45,46,47,48,49,64,65,77,94,95,96,97,98,106,107,],[-35,-30,-23,-27,-28,-29,-31,-32,-33,-34,88,-46,-36,-21,-22,-24,-25,-26,88,-45,]),'GTHEN':([7,40,42,43,44,45,46,47,48,49,64,65,77,94,95,96,97,98,106,107,],[-35,-30,-23,-27,-28,-29,-31,-32,-33,-34,89,-46,-36,-21,-22,-24,-25,-26,89,-45,]),'LTHEN':([7,40,42,43,44,45,46,47,48,49,64,65,77,94,95,96,97,98,106,107,],[-35,-30,-23,-27,-28,-29,-31,-32,-33,-34,90,-46,-36,-21,-22,-24,-25,-26,90,-45,]),'NOT':([7,40,42,43,44,45,46,47,48,49,64,65,77,94,95,96,97,98,106,107,],[-35,-30,-23,-27,-28,-29,-31,-32,-33,-34,91,-46,-36,-21,-22,-24,-25,-26,91,-45,]),'AND':([7,40,42,43,44,45,46,47,48,49,63,64,65,66,77,82,94,95,96,97,98,106,107,],[-35,-30,-23,-27,-28,-29,-31,-32,-33,-34,85,-44,-46,85,-36,85,-21,-22,-24,-25,-26,-43,-45,]),'OR':([7,40,42,43,44,45,46,47,48,49,63,64,65,66,77,82,94,95,96,97,98,106,107,],[-35,-30,-23,-27,-28,-29,-31,-32,-33,-34,86,-44,-46,86,-36,86,-21,-22,-24,-25,-26,-43,-45,]),'COM':([7,40,44,45,46,47,48,49,77,119,120,121,],[-35,-30,-28,-29,-31,-32,-33,-34,-36,128,-63,-64,]),'MAIN':([8,],[30,]),'LPAREN':([9,11,12,13,15,20,30,],[31,32,33,34,36,37,54,]),'INTEGER':([19,24,25,29,33,35,36,37,60,68,69,70,71,72,84,85,86,87,88,89,90,91,111,128,],[-56,-55,44,53,44,-20,44,44,44,44,44,44,44,44,44,-51,-52,44,-47,-48,-49,-50,44,44,]),'FLOAT':([19,24,25,33,35,36,37,60,68,69,70,71,72,84,85,86,87,88,89,90,91,111,128,],[-56,-55,45,45,-20,45,45,45,45,45,45,45,45,45,-51,-52,45,-47,-48,-49,-50,45,45,]),'CHAR':([19,24,25,33,35,36,37,60,68,69,70,71,72,84,85,86,87,88,89,90,91,111,128,],[-56,-55,47,47,-20,47,47,47,47,47,47,47,47,47,-51,-52,47,-47,-48,-49,-50,47,47,]),'TRUE':([19,24,25,31,33,35,36,37,60,68,69,70,71,72,84,85,86,87,88,89,90,91,111,128,],[-56,-55,48,48,48,-20,48,48,48,48,48,48,48,48,48,-51,-52,48,-47,-48,-49,-50,48,48,]),'FALSE':([19,24,25,31,33,35,36,37,60,68,69,70,71,72,84,85,86,87,88,89,90,91,111,128,],[-56,-55,49,49,49,-20,49,49,49,49,49,49,49,49,49,-51,-52,49,-47,-48,-49,-50,49,49,]),'RBB':([23,28,53,],[39,52,77,]),'STRING':([33,51,111,128,],[59,74,121,121,]),'LCB':([78,83,92,93,100,124,131,],[101,105,108,111,111,129,135,]),'ELSE':([126,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'line':([0,2,101,105,108,129,135,],[1,21,113,115,116,134,138,]),'nline':([0,2,101,105,108,129,135,],[2,2,2,2,2,2,2,]),'dtype':([0,2,34,101,105,108,129,135,],[3,3,61,3,3,3,3,3,]),'var':([0,2,3,5,25,33,34,36,37,51,60,61,68,69,70,71,72,84,87,93,100,101,104,105,108,111,128,129,135,],[4,4,22,26,40,40,4,40,40,75,40,4,40,40,40,40,40,40,40,110,110,4,4,4,4,40,40,4,4,]),'fline':([0,2,34,101,105,108,129,135,],[6,6,60,6,6,6,6,6,]),'ifsts':([0,2,101,105,108,129,131,135,],[10,10,10,10,10,10,136,10,]),'assign':([0,2,3,34,61,101,104,105,108,129,135,],[14,14,14,14,14,14,114,14,14,14,14,]),'numexp':([0,2,3,34,61,101,105,108,129,135,],[19,19,24,19,24,19,19,19,19,19,]),'exp':([25,33,36,37,60,84,87,],[41,58,65,65,65,65,107,]),'term':([25,33,36,37,60,68,69,84,87,],[42,42,42,42,42,94,95,42,42,]),'fact':([25,33,36,37,60,68,69,70,71,72,84,87,111,128,],[43,43,43,43,43,43,43,96,97,98,43,43,120,120,]),'bval':([25,31,33,36,37,60,68,69,70,71,72,84,87,111,128,],[46,55,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'pline':([33,],[57,]),'bexp':([36,37,60,],[63,66,82,]),'bexp2':([36,37,60,84,],[64,64,64,106,]),'strvar':([51,],[73,]),'andor':([63,66,82,],[84,84,84,]),'rln':([64,106,],[87,87,]),'arrt':([93,100,],[109,112,]),'dws':([111,128,],[118,133,]),'factarr':([111,128,],[119,119,]),'elsests':([126,],[130,]),'empty':([126,],[132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> line","S'",1,None,None,None),
  ('line -> nline line','line',2,'p_line_chg','clacyacc.py',65),
  ('line -> nline','line',1,'p_line_chg','clacyacc.py',66),
  ('nline -> dtype var SCOLON','nline',3,'p_nline_init','clacyacc.py',69),
  ('nline -> STR var SCOLON','nline',3,'p_nline_init','clacyacc.py',70),
  ('nline -> fline','nline',1,'p_nline_dec','clacyacc.py',76),
  ('nline -> STR IDVAR EQUAL strvar SCOLON','nline',5,'p_nline_str','clacyacc.py',79),
  ('nline -> BOOL MAIN LPAREN RPAREN LCB line RCB','nline',7,'p_nline_main','clacyacc.py',83),
  ('nline -> RETURN LPAREN bval RPAREN SCOLON','nline',5,'p_nline_ret','clacyacc.py',86),
  ('nline -> ifsts','nline',1,'p_nline_if','clacyacc.py',89),
  ('nline -> EXIT LPAREN RPAREN SCOLON','nline',4,'p_nline_exit','clacyacc.py',92),
  ('nline -> PRINT LPAREN pline RPAREN SCOLON','nline',5,'p_nline_print','clacyacc.py',95),
  ('pline -> exp','pline',1,'p_pline_print','clacyacc.py',98),
  ('pline -> STRING','pline',1,'p_pline_print','clacyacc.py',99),
  ('nline -> FOR LPAREN fline bexp SCOLON assign RPAREN LCB line RCB','nline',10,'p_nline_for','clacyacc.py',102),
  ('nline -> WHILE LPAREN bexp RPAREN LCB line RCB','nline',7,'p_nline_while','clacyacc.py',105),
  ('ifsts -> IF LPAREN bexp RPAREN LCB line RCB elsests','ifsts',8,'p_ifsts_fst','clacyacc.py',108),
  ('elsests -> ELSE LCB line RCB','elsests',4,'p_elsests_fst','clacyacc.py',111),
  ('elsests -> ELSE ifsts','elsests',2,'p_elsests_fst','clacyacc.py',112),
  ('elsests -> empty','elsests',1,'p_elsests_fst','clacyacc.py',113),
  ('numexp -> assign SCOLON','numexp',2,'p_numexp_stm','clacyacc.py',116),
  ('exp -> exp PLUS term','exp',3,'p_exp_pm','clacyacc.py',120),
  ('exp -> exp MINUS term','exp',3,'p_exp_pm','clacyacc.py',121),
  ('exp -> term','exp',1,'p_exp_pm','clacyacc.py',122),
  ('term -> term MUL fact','term',3,'p_term_mdm','clacyacc.py',125),
  ('term -> term DIV fact','term',3,'p_term_mdm','clacyacc.py',126),
  ('term -> term MOD fact','term',3,'p_term_mdm','clacyacc.py',127),
  ('term -> fact','term',1,'p_term_mdm','clacyacc.py',128),
  ('fact -> INTEGER','fact',1,'p_fact_val','clacyacc.py',131),
  ('fact -> FLOAT','fact',1,'p_fact_val','clacyacc.py',132),
  ('fact -> var','fact',1,'p_fact_val','clacyacc.py',133),
  ('fact -> bval','fact',1,'p_fact_val','clacyacc.py',134),
  ('fact -> CHAR','fact',1,'p_fact_val','clacyacc.py',135),
  ('bval -> TRUE','bval',1,'p_bval_val','clacyacc.py',138),
  ('bval -> FALSE','bval',1,'p_bval_val','clacyacc.py',139),
  ('var -> IDVAR','var',1,'p_var_id','clacyacc.py',142),
  ('var -> IDVAR LBB INTEGER RBB','var',4,'p_var_id','clacyacc.py',143),
  ('dtype -> INT','dtype',1,'p_dtype_num','clacyacc.py',147),
  ('dtype -> FLT','dtype',1,'p_dtype_num','clacyacc.py',148),
  ('dtype -> CHR','dtype',1,'p_dtype_num','clacyacc.py',149),
  ('dtype -> BOOL','dtype',1,'p_dtype_num','clacyacc.py',150),
  ('strvar -> STRING','strvar',1,'p_strvar_val','clacyacc.py',153),
  ('strvar -> var','strvar',1,'p_strvar_val','clacyacc.py',154),
  ('bexp -> bexp andor bexp2','bexp',3,'p_bexp_fst','clacyacc.py',157),
  ('bexp -> bexp2','bexp',1,'p_bexp_fst','clacyacc.py',158),
  ('bexp2 -> bexp2 rln exp','bexp2',3,'p_bexp2_fst','clacyacc.py',161),
  ('bexp2 -> exp','bexp2',1,'p_bexp2_fst','clacyacc.py',162),
  ('rln -> DEQUAL','rln',1,'p_rln_fst','clacyacc.py',165),
  ('rln -> GTHEN','rln',1,'p_rln_fst','clacyacc.py',166),
  ('rln -> LTHEN','rln',1,'p_rln_fst','clacyacc.py',167),
  ('rln -> NOT','rln',1,'p_rln_fst','clacyacc.py',168),
  ('andor -> AND','andor',1,'p_andor_fst','clacyacc.py',171),
  ('andor -> OR','andor',1,'p_andor_fst','clacyacc.py',172),
  ('empty -> <empty>','empty',0,'p_empty','clacyacc.py',175),
  ('assign -> var EQUAL exp','assign',3,'p_assign_num','clacyacc.py',179),
  ('fline -> dtype numexp','fline',2,'p_fline_for','clacyacc.py',182),
  ('fline -> numexp','fline',1,'p_fline_for','clacyacc.py',183),
  ('nline -> dtype LBB RBB IDVAR EQUAL arrt SCOLON','nline',7,'p_nline_arr','clacyacc.py',187),
  ('nline -> STR LBB RBB IDVAR EQUAL arrt SCOLON','nline',7,'p_nline_arr','clacyacc.py',188),
  ('arrt -> var','arrt',1,'p_arrt_data','clacyacc.py',191),
  ('arrt -> LCB dws RCB','arrt',3,'p_arrt_data','clacyacc.py',192),
  ('dws -> factarr COM dws','dws',3,'p_dws_vals','clacyacc.py',195),
  ('dws -> factarr','dws',1,'p_dws_vals','clacyacc.py',196),
  ('factarr -> fact','factarr',1,'p_factarr_vals','clacyacc.py',199),
  ('factarr -> STRING','factarr',1,'p_factarr_vals','clacyacc.py',200),
]
